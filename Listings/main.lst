C51 COMPILER V9.60.0.0   MAIN                                                              04/08/2021 20:41:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"    //Header file with LCD interfacing functions
   3          #include "serial.c" //C file with UART interfacing functions
   4          
   5          
   6          /************************************************
   7             lcd_test():
   8            LCD test function that gets called when
   9            '1' is received from UART
  10            Prints "LCD Ok" on LCD. After 4 seconds
  11            LCD is cleared
  12          ************************************************/
  13          
  14          //Main function
  15          void inning(void)
  16          { 
  17   1        unsigned int score = 0;
  18   1        unsigned int reg= 0xC0;
  19   1        unsigned int wickets = 0;
  20   1        unsigned int balls = 0;              // used for increasing the balls in the over 0.x
  21   1        unsigned int overs = 0;              // used for increasing the overs x.0 accprding to my code 1.6 = 2.0
  22   1        unsigned int overallballs = 0;  
  23   1        unsigned int ch=0;
  24   1        unsigned char currentscore[20];
  25   1        unsigned char currentballs[10];
  26   1        unsigned char currentovers[10];
  27   1        unsigned char currentevent[10];
  28   1        unsigned char currentwickets[10];
  29   1        //Call initialization functions
  30   1        lcd_init();
  31   1        uart_init();
  32   1        lcd_cmd(0x83);
  33   1        lcd_write_string(" 0/0  (0.0)");
  34   1        
  35   1        
  36   1        while(1)
  37   1        {
  38   2            //Receive a character
  39   2            ch = receive_char();
  40   2            
  41   2            if (balls>5){
  42   3              overs=overs+1;
  43   3              int_to_string1(overs,currentovers);
  44   3              lcd_cmd(0x8A);
  45   3              lcd_write_string(currentovers);
  46   3              lcd_cmd(0xC0);
  47   3              lcd_write_string("            ");
  48   3              reg=0xC0;
  49   3              if (overs>9){
  50   4              overs=overs-10;
  51   4              int_to_string1(overs,currentovers);
  52   4              lcd_cmd(0x8A);
  53   4              lcd_write_string(currentovers);
  54   4              lcd_cmd(0x88);
C51 COMPILER V9.60.0.0   MAIN                                                              04/08/2021 20:41:28 PAGE 2   

  55   4              lcd_write_string("(1");
  56   4              
  57   4              } 
  58   3              balls=0;
  59   3             }
  60   2            
  61   2            
  62   2             
  63   2              
  64   2              
  65   2            //Decide which test function to run based on character sent
  66   2            //Displays the string on the terminal software
  67   2            switch(ch)
  68   2            {       
  69   3              case '1': 
  70   3                       score++;
  71   3                       balls++;
  72   3                       int_to_string3(score,currentscore);
  73   3                       lcd_cmd(0x82);
  74   3                       lcd_write_string(currentscore);
  75   3                       int_to_string1(balls,currentballs);
  76   3                       lcd_cmd(0x8C);
  77   3                       lcd_write_string(currentballs);
  78   3                       
  79   3                       break;
  80   3              case '2': 
  81   3                       score=score+2;
  82   3                       balls++;
  83   3                       int_to_string3(score,currentscore);
  84   3                       lcd_cmd(0x82);
  85   3                       lcd_write_string(currentscore);
  86   3                       int_to_string1(balls,currentballs);
  87   3                       lcd_cmd(0x8C);
  88   3                       lcd_write_string(currentballs);
  89   3              
  90   3                       break;
  91   3              case '3': 
  92   3                       score=score+3;
  93   3                       balls++;
  94   3                       int_to_string3(score,currentscore);
  95   3                       lcd_cmd(0x82);
  96   3                       lcd_write_string(currentscore);
  97   3                       int_to_string1(balls,currentballs);
  98   3                       lcd_cmd(0x8C);
  99   3                       lcd_write_string(currentballs);
 100   3              
 101   3                       break;
 102   3              case '4': 
 103   3                       score=score+4;
 104   3                       balls++;
 105   3                       int_to_string3(score,currentscore);
 106   3                       lcd_cmd(0x82);
 107   3                       lcd_write_string(currentscore);
 108   3                       int_to_string1(balls,currentballs);
 109   3                       lcd_cmd(0x8C);
 110   3                       lcd_write_string(currentballs);
 111   3              
 112   3                       break;
 113   3              case '5': 
 114   3                       score=score+5;
 115   3                       balls++;
 116   3                       int_to_string3(score,currentscore);
C51 COMPILER V9.60.0.0   MAIN                                                              04/08/2021 20:41:28 PAGE 3   

 117   3                       lcd_cmd(0x82);
 118   3                       lcd_write_string(currentscore);
 119   3                       int_to_string1(balls,currentballs);
 120   3                       lcd_cmd(0x8C);
 121   3                       lcd_write_string(currentballs);
 122   3              
 123   3                       break;
 124   3              case '6': 
 125   3                       score=score+6;
 126   3                       balls++;
 127   3                       int_to_string3(score,currentscore);
 128   3                       lcd_cmd(0x82);
 129   3                       lcd_write_string(currentscore);
 130   3                       int_to_string1(balls,currentballs);
 131   3                       lcd_cmd(0x8C);
 132   3                       lcd_write_string(currentballs);
 133   3              
 134   3                       break;
 135   3              case 'E': 
 136   3                       score=score+1;
 137   3                       int_to_string3(score,currentscore);
 138   3                       lcd_cmd(0x82);
 139   3                       lcd_write_string(currentscore);
 140   3                       overallballs=overallballs-1;
 141   3                       break;
 142   3              case 'W': 
 143   3                       wickets=wickets+1;
 144   3                       balls++;
 145   3                       int_to_string1(wickets,currentwickets);
 146   3                       lcd_cmd(0x86);
 147   3                       lcd_write_string(currentwickets);
 148   3                       int_to_string1(balls,currentballs);
 149   3                       lcd_cmd(0x8C);
 150   3                       lcd_write_string(currentballs);
 151   3                       if(wickets>9){
 152   4                       lcd_cmd(0x86);
 153   4                       lcd_write_string("10");
 154   4                       }
 155   3              
 156   3                       break;
 157   3              case 'N': 
 158   3                       score=score+1;
 159   3                       int_to_string3(score,currentscore);
 160   3                       lcd_cmd(0x82);
 161   3                       lcd_write_string(currentscore);
 162   3                       overallballs=overallballs-1;
 163   3                       break;
 164   3              case '.': 
 165   3                       balls=balls+1;
 166   3                       int_to_string1(balls,currentballs);
 167   3                       lcd_cmd(0x8C);
 168   3                       lcd_write_string(currentballs);
 169   3                       break;
 170   3              
 171   3              
 172   3              
 173   3              
 174   3                    
 175   3              default:transmit_string("Incorrect test. Pass correct number\r\n");
 176   3                       break;
 177   3              
 178   3            }
C51 COMPILER V9.60.0.0   MAIN                                                              04/08/2021 20:41:28 PAGE 4   

 179   2            
 180   2          
 181   2            overallballs=overallballs+1;
 182   2            if(overallballs>119) {
 183   3              transmit_string("Innings is completed");
 184   3              lcd_cmd(0xC0);
 185   3              lcd_write_string("Innings Ends");
 186   3              msdelay(5000);
 187   3              overs=0;
 188   3              wickets=0;
 189   3              balls=0;
 190   3              score=0;
 191   3              lcd_cmd(0x83);
 192   3              lcd_write_string(" 000/0 (0.0)");
 193   3              return;
 194   3              }
 195   2            else if(wickets>9) {
 196   3              transmit_string("Innings is completed");
 197   3              lcd_cmd(0xC0);
 198   3              lcd_write_string("Innings Ends");
 199   3              msdelay(5000);
 200   3              overs=0;
 201   3              wickets=0;
 202   3              balls=0;
 203   3              score=0;
 204   3              lcd_cmd(0x83);
 205   3              lcd_write_string(" 000/0 (0.0)");
 206   3              return;
 207   3              }
 208   2            reg = reg+1;
 209   2            lcd_cmd(reg);
 210   2            int_to_string2(ch,currentevent);
 211   2            lcd_write_string(currentevent);
 212   2            msdelay(100);
 213   2        }
 214   1      
 215   1      }
 216          void main(void){
 217   1        inning();
 218   1        inning();
 219   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1088    ----
   CONSTANT SIZE    =    116    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      85
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
